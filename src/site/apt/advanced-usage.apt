 ------
 Advanced Usage
 ------
 Raphaël Piéroni
 ------
 2008
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~     http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/guides/mini/guide-apt-format.html


Archetype creation

    Creating an archetype from an existing project involves three steps :

    * the archetype resolution

    * the archetype installation:deployment

    * the archetype usage

    []


Usage

    Calling <<<mvn archetype:create-from-project>>> the plugin first resolves 
    the package by guessing the project directory. 

    It then generates the directory tree of the archetype in the 
    <<<target/generated-sources/archetype>>> directory.

+---
    ADD SOME SAMPLE 
+---

    Then move to that generated directory and call <<<mvn install>>> on the 
    created archetype.

+---
    ADD SOME SAMPLE
+---

    Finally move to a fresh directory and use your archetype.


Configuration
    
    The <<<create-from-project>>> mojo enable the user to provide some sensible
    configuration using the system properties or a property file.

    The system properties permits the user to define the groupId, artifactId, 
    version of the created archetype. They also permits to override the resolved 
    package and to create a partial archetype.

    When used, the property file takes precedence on the system properties.
    It is also the only way to define additional properties in the archetype.
